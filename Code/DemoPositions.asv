clc;
clf;
clear all;
hold on;
axis([-2 2 -2 2 -1 3])

Bench([1,0,0,0;
      0,1,0,0;
      0,0,1,0;
      0,0,0,1]);
tray1 = Tray([1,0,0,0;
     0,1,0,0;
     0,0,1,0.9;
     0,0,0,1]);

r = UR3e;
r.model.base = [1,0,0,0.4;
     0,1,0,0;
     0,0,1,0.9;
     0,0,0,1];

q0 = [ 0   -pi/4    pi/4    -pi/2 -pi/2 0];
r.model.animate(q0)



q1 = r.model.ikcon(tray1.cups(1).currentTransform, q0);

q2 = [ pi   -pi/4    pi/4    -pi/2 -pi/2 0];
moveRobot(r,q0,q1);
moveRobotGrip(r,q1,q0,tray1.cups(1));
moveRobotGrip(r,q0,q2,tray1.cups(1));
depotPrep = r.model.fkine(q2).T
depotTransform = depotPrep * [1,0,0,0;
                              0,1,0,0;
                              0,0,1,0.182;
                              0,0,0,1] 
q3 = r.model.ikcon(depotTransform, q2);
moveRobotGrip(r,q2,q3,tray1.cups(1));

%{
qtraj = jtraj(q0, q1, 100);

for i = 1:size(qtraj, 1)
    r.model.animate(qtraj(i,:)); %animate all values in the matrix above
    drawnow();
    rposition = r.model.getpos(); % get the current pos of the robot
    endEffectorPose = r.model.fkine(rposition).T; %check the solution with forward kinematics transpose it
end
%}



